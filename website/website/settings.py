"""
Django settings for website project.

Generated by 'django-admin startproject' using Django 5.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
from storages.backends.s3boto3 import S3Boto3Storage
from decouple import config
from django.conf import settings
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'g#*3w$wr-1xxd0diz9^gxemb19n^41sytxs&fye&^(6-cc^6+'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["127.0.0.1", "localhost", "test.phraseart.org", "phraseart.org", "www.phraseart.org"]


# Application definition

INSTALLED_APPS = [
    'unfold',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'pipeline',
    'storages',
    'imagekit',
    'django_opensearch_dsl',
    'core',
    'quotes',
    'unfold.contrib.forms'
]

if settings.DEBUG:
    INSTALLED_APPS = [
                        'debug_toolbar',
                        'django_browser_reload'
                     ] + INSTALLED_APPS
MIDDLEWARE = []
if settings.DEBUG:
    MIDDLEWARE = [
                     'django_browser_reload.middleware.BrowserReloadMiddleware',
                 ] + MIDDLEWARE
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware'
] + MIDDLEWARE

if settings.DEBUG:
    MIDDLEWARE = [
                     'debug_toolbar.middleware.DebugToolbarMiddleware',
                 ] + MIDDLEWARE


ROOT_URLCONF = 'website.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'website.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': config('DATABASE_NAME'),
        'USER': config('DATABASE_USER'),
        'PASSWORD': config('DATABASE_PASSWORD'),
        'HOST': config('DATABASE_HOST'),
        'PORT': config('DATABASE_PORT'),
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'fr'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/



STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    'pipeline.finders.PipelineFinder',
)

AWS_ACCESS_KEY_ID=config('AWS_ACCESS_KEY_ID')
AWS_SECRET_ACCESS_KEY=config('AWS_SECRET_ACCESS_KEY')
AWS_BUCKET_NAME = 'phraseart'
AWS_STORAGE_BUCKET_NAME = 'phraseart'
AWS_S3_REGION_NAME = 'fr-par'
AWS_S3_ENDPOINT_URL = 'https://phraseart.s3.fr-par.scw.cloud'

STATIC_ROOT = 'static/'
STATICFILES_STORAGE = 'pipeline.storage.PipelineManifestStorage'
# URL pour accéder aux fichiers statiques et médias
STATIC_URL = "https://static.phraseart.org/"
MEDIA_URL = f'{AWS_S3_ENDPOINT_URL}/media/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# STORAGES Configuration

STORAGES = {
    'default': {
        'BACKEND': 'storages.backends.s3boto3.S3Boto3Storage',
    },
    'staticfiles': {
        'BACKEND': 'pipeline.storage.PipelineManifestStorage',
        'OPTIONS': {
            'location': 'static',
        },
    },
    'media': {
        'BACKEND': 'storages.backends.s3boto3.S3Boto3Storage',
        'OPTIONS': {
            'location': 'media',
        },
    },
}



INTERNAL_IPS = [
    "127.0.0.1",
]

PIPELINE = {
    'STYLESHEETS': {
        'website': {
            'source_filenames': (
                'css/bootstrap.css',
                'css/fonts/fontello/css/fontello.css',
                'js/jquery.magnific-popup/magnific-popup.css',
                'js/jquery.fluidbox/fluidbox.css',
                'js/owl-carousel/owl.carousel.css',
                'js/selection-sharer/selection-sharer.css',
                'css/rotate-words.css',
                'css/align.css',
                'css/main.css',
                'js/shortcodes/shortcodes.css',
                'css/768.css',
                'css/992.css',
            ),
            'output_filename': 'css/website.css',
        }
    },
    'JAVASCRIPT': {
        'website': {
            'source_filenames': (
                'js/jquery-migrate-3.0.0.min.js',
                'js/fastclick.js',
                'js/jquery.fitvids.js',
                'js/jquery.viewport.mini.js',
                'js/jquery.waypoints.min.js',
                'js/jquery-validation/jquery.validate.min.js',
                'js/imagesloaded.pkgd.min.js',
                'js/jquery.isotope.min.js',
                'js/jquery.magnific-popup/jquery.magnific-popup.min.js',
                'js/jquery.fluidbox/jquery.fluidbox.min.js',
                'js/owl-carousel/owl.carousel.min.js',
                'js/selection-sharer/selection-sharer.js',
                'js/socialstream.jquery.js',
                'js/main.js',
                'js/shortcodes/shortcodes.js'
            ),
            'output_filename': 'js/website.js',
        }
    }
}
FILE_UPLOAD_HANDLERS = [
    'django.core.files.uploadhandler.TemporaryFileUploadHandler',
]

OPENSEARCH_DSL={
    'default': {
        'hosts': config('ELASTIC_HOST'),
        'http_auth': [config('ELASTIC_USER'), config('ELASTIC_PASSWORD')],
        'scheme': 'https',
        'port': 443
    },
}